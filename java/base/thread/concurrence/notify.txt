####################################################
一开始就将一个类设计成是线程安全的，比在后期重新修复它更容易。
####################################################
在没有正确同步的情况下，如果多个线程访问了同一个变量，你的程序就存在隐患。可以通过下述方法修复它：
1.不要跨线程共享变量
2.使用状态变量为不可变的
3.在任何访问状态变量的时候使用同步
####################################################
原子操作：假设有操作A和B，如果从执行A的线程角度来看，当其他线程执行B时，要么B全部执行完成，
要么一点都没有执行，这样A和B互为原子操作。
一个原子操作是指：该操作对于所有操作，包括它自己，都满足前面描述的状态。
####################################################
为了保护状态的一致性，要在单一的原子操作中更新相互关联的状态变量。
####################################################